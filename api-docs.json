{
  "openapi": "3.0.3",
  "info": {
    "title": "API docs for VClite",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 1
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Login data is invalid"
          },
          "403": {
            "description": "Password is incorrect"
          },
          "404": {
            "description": "User with this username not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "base64"
                  },
                  "username": {
                    "type": "string",
                    "minLength": 1
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 1
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": ["image", "username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "422": {
            "description": "User with this username already exists"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["users"],
        "description": "Get info about the user assosiated with provided JWT",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": ["users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "User has been deleted"
          },
          "404": {
            "description": "Either JWT isn't provided or invalid or authenticated user isn't an admin or user to delete not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/authors": {
      "post": {
        "tags": ["authors"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "userId": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "404": {
            "$ref": "#/components/responses/NotAdmin"
          },
          "422": {
            "description": "User with this id not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["authors"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/itemsNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPaginationQueryParameters"
          },
          "404": {
            "$ref": "#/components/responses/NotAdmin"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/authors/{id}": {
      "patch": {
        "tags": ["authors"],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Author has been updated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidUpdateData"
          },
          "404": {
            "description": "Either JWT isn't provided or invalid or authenticated user isn't an admin or authore to update not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "delete": {
        "tags": ["authors"],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Author has been deleted"
          },
          "404": {
            "description": "Either JWT isn't provided or invalid or authenticated user isn't an admin or authore to delete not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/tags": {
      "post": {
        "tags": ["tags"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "404": {
            "$ref": "#/components/responses/NotAdmin"
          },
          "422": {
            "description": "Tag with this name already exists"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["tags"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/itemsNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPaginationQueryParameters"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/tags/{id}": {
      "patch": {
        "tags": ["tags"],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Tag has been updated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidUpdateData"
          },
          "404": {
            "description": "Tag not found or user assosiated with provided JWT isn't an admin"
          },
          "422": {
            "description": "Tag with this name already exists"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "delete": {
        "tags": ["tags"],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Tag has been deleted"
          },
          "404": {
            "description": "Tag not found or user assosiated with provided JWT isn't an admin"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["categories"],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "parentCategoryId": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "404": {
            "$ref": "#/components/responses/NotAdmin"
          },
          "422": {
            "description": "Category with this name already exists or parent category with this id not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["categories"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/itemsNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPaginationQueryParameters"
          }
        }
      }
    },
    "/categories/{id}": {
      "patch": {
        "tags": ["categories"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "parentCategoryId": {
                    "type": "integer",
                    "minimum": 1,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Category has been updated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidUpdateData"
          },
          "404": {
            "description": "Category not found or user assosiated with provided JWT isn't an admin"
          },
          "422": {
            "description": "Category with this name already exists or parent category with this id not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "delete": {
        "tags": ["categories"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Category has been deleted"
          },
          "404": {
            "description": "Category not found or user assosiated with provided JWT isn't an admin"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": ["posts"],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "base64"
                  },
                  "extraImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "base64"
                    },
                    "minItems": 1
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "categoryId": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "tagsIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "image",
                  "title",
                  "content",
                  "categoryId",
                  "tagsIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/NotAuthor"
          },
          "422": {
            "description": "Category with this id not found or some tag in provided array of tags ids not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["posts"],
        "parameters": [
          {
            "in": "query",
            "name": "titleContains",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "in": "query",
            "name": "contentContains",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "in": "query",
            "name": "authorFirstName",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "tagId",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "tagIdIn",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              },
              "minItems": 1
            }
          },
          {
            "in": "query",
            "name": "tagIdAll",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              },
              "minItems": 1
            }
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "string",
              "format": "date",
              "minLength": 1
            }
          },
          {
            "in": "query",
            "name": "createdAtLt",
            "schema": {
              "type": "string",
              "format": "date",
              "minLength": 1
            }
          },
          {
            "in": "query",
            "name": "createdAtGt",
            "schema": {
              "type": "string",
              "format": "date",
              "minLength": 1
            }
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/itemsNumber"
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "-createdAt",
                "authorFirstName",
                "-authorFirstName",
                "category",
                "-category",
                "imagesNumber",
                "-imagesNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid filter, pagination or order query parameters"
          }
        }
      }
    },
    "/posts/{id}": {
      "patch": {
        "tags": ["posts"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "base64"
                  },
                  "extraImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "base64"
                    },
                    "minItems": 1
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "categoryId": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "tagsIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "minItems": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Post has been updated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidUpdateData"
          },
          "404": {
            "description": "Post not found or user assosiated with provided JWT isn't an admin"
          },
          "422": {
            "description": "Category with this id not found or some tag in provided array of tags ids not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "delete": {
        "tags": ["posts"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Post has been deleted"
          },
          "404": {
            "description": "Post not found or user assosiated with provided JWT isn't an admin"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/posts/{id}/comments": {
      "post": {
        "tags": ["post's comments"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "description": "Post with this id not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["post's comments"],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/itemsNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPaginationQueryParameters"
          },
          "404": {
            "description": "Post with this id not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "delete": {
        "tags": ["post's comments"],

        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comments have been deleted"
          },
          "404": {
            "description": "Post not found or user assosiated with provided JWT isn't an admin"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/drafts": {
      "post": {
        "tags": ["drafts"],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "base64"
                  },
                  "extraImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "base64"
                    },
                    "minItems": 1
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "categoryId": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "tagsIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "image",
                  "title",
                  "content",
                  "categoryId",
                  "tagsIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Draft has been created"
          },
          "400": {
            "$ref": "#/components/responses/InvalidCreationData"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/NotAuthor"
          },
          "422": {
            "description": "Category with this id not found or some tag in provided array of tags ids not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "get": {
        "tags": ["drafts"],
        "description": "Get author's drafts",

        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/itemsNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPaginationQueryParameters"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/NotAuthor"
          }
        }
      }
    },
    "/drafts/{id}": {
      "patch": {
        "tags": ["drafts"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "base64"
                  },
                  "extraImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "base64"
                    },
                    "minItems": 1
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "categoryId": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "tagsIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "minItems": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Draft has been updated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidUpdateData"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/NotAuthor"
          },
          "404": {
            "description": "Draft not found"
          },
          "422": {
            "description": "Category with this id not found or some tag in provided array of tags ids not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      },
      "delete": {
        "tags": ["drafts"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Draft has been deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/NotAuthor"
          },
          "404": {
            "description": "Draft not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    },
    "/drafts/{id}/publish": {
      "post": {
        "tags": ["drafts"],

        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Draft has been published"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/NotAuthor"
          },
          "404": {
            "description": "Draft not found"
          },
          "500": {
            "$ref": "#/components/responses/UnknownError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "id": {
        "in": "path",
        "required": true,
        "name": "id",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "pageNumber": {
        "in": "query",
        "name": "pageNumber",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "itemsNumber": {
        "in": "query",
        "name": "itemsNumber",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "responses": {
      "NotAdmin": {
        "description": "Either JWT isn't provided or invalid or authenticated user isn't an admin"
      },
      "NotAuthor": {
        "description": "User assosiated with provided JWT isn't an author"
      },
      "InvalidCreationData": {
        "description": "Creation data is invalid"
      },
      "InvalidUpdateData": {
        "description": "Update data is invalid"
      },
      "InvalidPaginationQueryParameters": {
        "description": "Pagination query parameters are invalid"
      },
      "Unauthenticated": {
        "description": "JWT isn't provided or invalid"
      },
      "UnknownError": {
        "description": "Unknown error. Please contact [oleg@oleg.ru](mailto:oleg@oleg.ru)"
      }
    }
  }
}
